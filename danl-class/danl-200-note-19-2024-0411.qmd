---
title: Lecture 19 - Note
subtitle: mutate()
author: Byeong-Hak Choe
institute: SUNY Geneseo
date: 2024-04-16
format: 
  html
    # toc: true
    # toc-depth: 2
    # toc-expand: true
    # toc-title: Contents
# code-fold: true
code-tools: true

execute:
  echo: true
  eval: true
  message: false
  warning: false
  fig-width: 9
  fig-height: 6
---
```{r}
#| include: false
library(tidyverse)
library(skimr)
library(broom)
library(hrbrthemes)

theme_set(theme_ipsum() +
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = element_text(size = rel(1.5) ),
                axis.title.y = element_text(size = rel(1.5) ))
          )

```


# `flights` data.frame
We need to install the `nycflights13` package.

  - Run `install.packages("nycflights13")` in the R Console.


```{r}
library(tidyverse)
library(nycflights13)
flights <- nycflights13::flights

??flights

```
<br>


```{r}
flights |> 
  select(dep_time) |> 
  mutate(
    hour = dep_time %/% 100,
    minute = dep_time %% 100
    )
```

```{r}
flights |> 
  select(year:day, ends_with("delay"), air_time) |> 
  mutate(gain = dep_delay - arr_delay,
         hours = air_time / 60,
         gain_per_hour = gain / hours ) 
```

```{r}
flights |> 
  mutate(
    gain = dep_delay - arr_delay,
    speed = distance / air_time * 60,
    .before = dep_time
  )
```

```{r}
flights |> 
  mutate(
    gain = dep_delay - arr_delay,
    speed = distance / air_time * 60,
    .after = day  
  )
```

# lead() and lag()

```{r}
df <- data.frame( x = 1:10 )

df <- df |> 
  mutate(x_lag = lag(x),
         x_lead = lead(x))
```



```{r}
df_gdp <- data.frame(
  Year = 2015:2022,
  GDP = c(100, 105, 109, 113, 
          118, 121, 119, 118)) 

df_gdp <- df_gdp |>            
  mutate(GDP_lag = lag(GDP),
         GDP_chg = GDP - GDP_lag,
         GDP_growth_pct = 100 * GDP_chg / GDP)
```


# `ifelse()`

```{r}
flight_season <- flights |> 
  select(month) |> 
  mutate(summer_month = ifelse(month %in% c(6,7,8),
                               TRUE,
                               FALSE
                               )
         )
```


# Ranking functions
```{r}
rank_me <- data.frame( x = c(10, 5, 1, 5, 5, NA) )

rank_me_asce <- rank_me |> 
  mutate(x_min_rank = min_rank(x),
         x_dense_rank = dense_rank(x),
         x_row_number = row_number(x),
         x_perc_rank = percent_rank(x) )
         
rank_me_desc <- rank_me |> 
  mutate(x_min_rank = min_rank(-x), # instead of -x, we can use desc(x) 
         x_dense_rank = dense_rank(-x),
         x_row_number = row_number(-x), 
         x_perc_rank = percent_rank(-x) )
```


# Useful math/datatype functions
```{r}
df <- data.frame( x = c(1:10) ) |> 
  mutate(x_log = log(x),
         x_log10 = log10(x),
         x_exp = exp(x),
         x_sqrt = sqrt(x),
         x_sqrt_round = round(x_sqrt, 2),
         x_fct = factor(x),
         x_chr = as.character(x),
         x_num = as.numeric(x),
         x_int = as.integer(x) )
```


# Classwork 10

## Question 1


### Q1a
Brainstorm as many ways as possible to select `dep_time`, `dep_delay`, `arr_time`, and `arr_delay` from `flights`.

```{r}
# 1
q1a_manually <- flights |> 
  select(dep_time, dep_delay, arr_time, arr_delay)

# 2
q1a_helper <- flights |> 
  select(starts_with("dep_"), 
         starts_with("arr_"))


# 3
q1a_helper2 <- flights |> 
  select(ends_with("_time"), 
         ends_with("_delay"),
         ) # we need to remove some variables here


```

<br>

### Q1b
Rename `air_time` to `air_time_min` to indicate units of measurement and move it to the beginning of the data.frame.

```{r}

```


<br><br>

## Question 2

### Q2a
- Currently `dep_time` and `sched_dep_time` are convenient to look at, but hard to compute with because their values are represented with format HHMM or HMM (H for hour and M for minute).
- Convert them to a more convenient representation of **number of minutes since midnight**.

```{r}

```


<br>

### Q2b
Compare `air_time` with `arr_time` - `dep_time`. What do you expect to see? What do you see? What do you need to do to fix it?

```{r}

```

<br>


### Q2c
Compare `dep_time`, `sched_dep_time`, and `dep_delay`. How would you expect those three numbers to be related?

```{r}

```



<br>

### Q2d
Find the 20 most delayed flights using a ranking function. How do you want to handle ties?

```{r}

```


<br>

### Q2e
Read the following CSV file, NVDA.csv, as a data.frame with the name `nvda`:

```{r}
nvda <- read_csv("https://bcdanl.github.io/data/NVDA.csv")
```

Describe the distribution of the percentage change in Close price of Nvidia stock.

```{r}

```

