---
title: Lecture 12 - Note
subtitle: Facets; Data Visualization Process; Geometric Objects
author: 
  - name: Byeong-Hak Choe
date: 2024-03-07

execute: 
  echo: true    # true false
  eval: true    # true false
  warning: false    # true false
  message: false    # true false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true    # true false
    number-sections: true    # true false
    code-fold: false    # true false show       # https://quarto.org/docs/output-formats/html-code.html
    code-tools: true    # true false
    highlight-style: a11y        # a11y arrow ayu atom-one breeze github gruvbox tango espresso
                                     # pygments tango espresso espresso zenburn kate nord
                                    # https://quarto.org/docs/output-formats/html-code.html#highlighting
---


```{r setup}
#| include: false
library(tidyverse)
library(hrbrthemes)
library(skimr)
library(DT)
library(rmarkdown)

```



# Classwork 6
## Q3b

What do the empty cells in the scatterplot of displ vs. hwy with facet_grid(drv ~ cyl) mean?

```{r}
ggplot( data = mpg ) +
  geom_point( mapping = aes(x = displ, y = hwy),
              alpha = .33 ) +
  facet_grid(drv ~ cyl)
```



## Q3c
- `facet_grid(ROW-WISE SPLIT ~ COLUMN-WISE SPLIT)`
- `.` makes facet ignore corresponding split.


```{r}
ggplot( data = mpg ) +
  geom_point( mapping = aes(x = displ, y = hwy),
              alpha = .33 ) 
```


```{r}
ggplot( data = mpg ) +
  geom_point( mapping = aes(x = displ, y = hwy),
              alpha = .33 ) +
  facet_grid(drv ~ .)

```

```{r}
ggplot( data = mpg ) +
  geom_point( mapping = aes(x = displ, y = hwy),
              alpha = .33 ) +
  facet_grid(. ~ drv)

```

## Q3d

```{r}
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy),
             alpha = .5) + 
  facet_wrap(. ~ class, nrow = 2)
```


```{r}
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy,
                           color = class),
             alpha = .5)

```




```{r}
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy,
                           color = class),
             alpha = .5) + 
  facet_wrap(. ~ class, nrow = 2)

```


## Q3d
```{r}
tvshows <- read_csv(
        'https://bcdanl.github.io/data/tvshows.csv')
```


Provide both (1) ggplot code and (2) comment to describe the relationship between audience size (GRP) and audience engagement (PE).

```{r}
ggplot( data = tvshows ) +
  geom_point( mapping = aes(x = GRP, y = PE ), alpha = .5) +
  geom_smooth( mapping = aes(x = GRP, y = PE ) )
```



Provide both (1) ggplot code and (2) comment to describe how the relationship between audience size (GRP) and audience engagement (PE) varies by Genre.


```{r}
ggplot( data = tvshows ) +
  geom_point( mapping = aes(x = GRP, y = PE ), alpha = .5) +
  geom_smooth( mapping = aes(x = GRP, y = PE ) ) +
  facet_wrap( Genre ~ .)
```

```{r}
ggplot( data = tvshows ) +
  geom_point( mapping = aes(x = GRP, y = PE, color = Genre ), alpha = .5) +
  geom_smooth( mapping = aes(x = GRP, y = PE, color = Genre ), method = lm ) 
```



# Data Viz

```{r}
ggplot(data = mpg) + 
  geom_point(mapping = 
                aes(x = displ, 
                    y = hwy), alpha = .5) + 
  geom_smooth(mapping = 
                aes(x = displ, 
                    y = hwy), method = "lm")
```



## Histogram

```{r}
ggplot(data = mpg ) +
  geom_histogram(mapping =aes(x = displ),
                 bins = 30)
```


```{r}
ggplot(data = mpg ) +
  geom_histogram(mapping =aes(x = displ),
                 bins = 5)
```



```{r}
ggplot(data = mpg ) +
  geom_histogram(mapping =aes(x = displ),
                 binwidth = 1)
```



```{r}
ggplot(data = mpg ) +
  geom_histogram(mapping =aes(x = displ),
                 binwidth = 1, bins = 3) # bins = 3 is ignored
```


```{r}
ggplot(data = mpg ) +
  geom_histogram(mapping =aes(x = displ),
                 bins = 3, binwidth = 1) # bins = 3 is ignored
```



```{r}
ggplot(data = mpg) + 
  geom_boxplot(mapping = 
                aes(y = hwy))
```


```{r}
diamonds <- diamonds
```



```{r}
ggplot(data = diamonds) + 
  geom_bar(mapping = 
             aes(y = cut))
```
## Time Trend

```{r}
path <- 
  "https://bcdanl.github.io/data/NVDA.csv"
nvda <- read_csv(path)

ggplot(data = nvda) + 
  geom_line(mapping = 
                aes(x = Date, 
                    y = Close))
```


```{r}
path <- 
  "https://bcdanl.github.io/data/NVDA.csv"
nvda <- read_csv(path)

ggplot(data = nvda) + 
  geom_line(mapping = 
                aes(x = Date, 
                    y = Close))+ 
  geom_point(mapping = 
                aes(x = Date, 
                    y = Close), size = .5)+ 
  geom_smooth(mapping = 
                aes(x = Date, 
                    y = Close))
```