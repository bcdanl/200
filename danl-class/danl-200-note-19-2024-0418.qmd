---
title: Lecture 19 - Note
subtitle: mutate()
author: Byeong-Hak Choe
institute: SUNY Geneseo
date: 2024-04-18
format: 
  html
    # toc: true
    # toc-depth: 2
    # toc-expand: true
    # toc-title: Contents
# code-fold: true
code-tools: true

execute:
  echo: true
  eval: true
  message: false
  warning: false
  fig-width: 9
  fig-height: 6
---
```{r}
#| include: false
library(tidyverse)
library(skimr)
library(broom)
library(hrbrthemes)

theme_set(theme_ipsum() +
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = element_text(size = rel(1.5) ),
                axis.title.y = element_text(size = rel(1.5) ))
          )

```


# `flights` data.frame
We need to install the `nycflights13` package.

  - Run `install.packages("nycflights13")` in the R Console.


```{r}
library(tidyverse)
library(nycflights13)
flights <- nycflights13::flights

# ??flights
```


# Classwork 10

## Question 1


### Q1a
Brainstorm as many ways as possible to select `dep_time`, `dep_delay`, `arr_time`, and `arr_delay` from `flights`.

```{r}
# 1
q1a_manually <- flights |> 
  select(dep_time, dep_delay, arr_time, arr_delay)

# 2
q1a_helper <- flights |> 
  select(starts_with("dep_"), 
         starts_with("arr_"))


# 3
q1a_helper2 <- flights |> 
  select(ends_with("_time"), 
         ends_with("_delay"),
         ) # we need to remove some variables here


```

<br>

### Q1b
Rename `air_time` to `air_time_minutes` to indicate units of measurement and move it to the beginning of the data.frame.

```{r}
flights <- flights |> 
  rename(air_time_minutes = air_time)
```


<br><br>

## Question 2

### Q2a
- Currently `dep_time` and `sched_dep_time` are convenient to look at, but hard to compute with because their values are represented with format HHMM or HMM (H for hour and M for minute).
- Convert them to a more convenient representation of **number of minutes since midnight**.

```{r}
q2a <- flights |> 
  select(air_time_minutes, arr_time,
         dep_time, sched_dep_time, dep_delay) |> 
  mutate(arr_time_hour = arr_time %/% 100,
         arr_time_minutes = arr_time %% 100,
         dep_time_hour = dep_time %/% 100,
         dep_time_minutes = dep_time %% 100,
         sched_dep_time_hour = sched_dep_time %/% 100,
         sched_dep_time_minutes = sched_dep_time %% 100) |> 
  mutate(arr_time = arr_time_hour * 60 + arr_time_minutes,
         dep_time = dep_time_hour * 60 + dep_time_minutes,
         sched_dep_time = sched_dep_time_hour * 60 + sched_dep_time_minutes
         )
```


<br>

### Q2b
Compare `air_time_minutes` with `arr_time` - `dep_time`. What do you expect to see? What do you see? What do you need to do to fix it?

```{r}
q2b <- q2a |> 
  mutate(diff = arr_time - dep_time,
         .after = air_time_minutes) |> 
  mutate(TF = air_time_minutes == diff,
         .before = 1) |> 
  mutate(how_many = sum(TF, na.rm = TRUE),
         .before = 1)
```

<br>


### Q2c
Compare `dep_time`, `sched_dep_time`, and `dep_delay`. How would you expect those three numbers to be related?

```{r}
q2c <- q2a |>
  mutate(dep_delay_maunal = dep_time - sched_dep_time,
         .after = dep_delay) |> 
  mutate(TF = dep_delay_maunal == dep_delay,
         .before = dep_delay)

library(skimr)
skim(q2c$TF)
```



<br>

### Q2d
- Find the 20 most delayed flights using a ranking function. 
- How do you want to handle ties?

```{r}
q2d_dense <- flights |> 
  select(dep_delay, carrier) |> 
  arrange(-dep_delay) |> 
  mutate(rank_min = min_rank(-dep_delay),
         rank_den = dense_rank(-dep_delay),
         rank_row = row_number(-dep_delay)
         ) |> 
  filter(rank_den <= 20)

q2d_min <- flights |> 
  select(dep_delay, carrier) |> 
  arrange(-dep_delay) |> 
  mutate(rank_min = min_rank(-dep_delay),
         rank_den = dense_rank(-dep_delay),
         rank_row = row_number(-dep_delay)
         ) |> 
  filter(rank_min <= 20)

```


<br>

### Q2e
Read the following CSV file, NVDA.csv, as a data.frame with the name `nvda`:

```{r}
nvda <- read_csv("https://bcdanl.github.io/data/NVDA.csv")
```

Describe the distribution of the daily percentage change in `Close` price of `Nvidia` stock.

```{r}
q2e <- nvda |> 
  mutate(lag_Close = lag(Close),
         chg_Close = Close - lag_Close,
         .after = Close)
```

