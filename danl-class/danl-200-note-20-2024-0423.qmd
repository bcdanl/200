---
title: Lecture 19 - Note
subtitle: mutate() / group_by() / summarize()
author: Byeong-Hak Choe
institute: SUNY Geneseo
date: 2024-04-23
format: 
  html
    # toc: true
    # toc-depth: 2
    # toc-expand: true
    # toc-title: Contents
# code-fold: true
code-tools: true

execute:
  echo: true
  eval: true
  message: false
  warning: false
  fig-width: 9
  fig-height: 6
---
```{r}
#| include: false
library(tidyverse)
library(skimr)
library(broom)
library(hrbrthemes)

theme_set(theme_ipsum() +
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = element_text(size = rel(1.5) ),
                axis.title.y = element_text(size = rel(1.5) ))
          )

```

## Classwork 10
### Q2e
Read the following CSV file, NVDA.csv, as a data.frame with the name `nvda`:

```{r}
nvda <- read_csv("https://bcdanl.github.io/data/NVDA.csv")
```

Describe the distribution of the daily percentage change in `Close` price of `Nvidia` stock.

```{r}
q2e <- nvda |> 
  mutate(lag_Close = lag(Close),
         chg_Close = Close - lag_Close,
         pct_chg_Close = 100 * chg_Close / Close, 
         .after = Close)
```

```{r}
ggplot(q2e, 
       aes(x = pct_chg_Close)) +
  geom_histogram(bins = 240)
```

# Factor

```{r}
# data.frame(
  # VARIABLE_1 = VECTOR,
  # VARIABLE_2 = VECTOR,
# )


df <- data.frame(
  city = c("Rochester", "Buffalo", 
           "Geneseo", "Syracus"),
  income = c(80,  82,  70, 75) 
  )

df <- df |> 
  mutate(city_fct = factor(city))

df$city
class(df$city)

df$city_fct
class(df$city_fct)



```


## Levels

```{r}
df <- df |> 
  mutate(city_fct_new = 
           factor(city,
                  levels = c("Geneseo", "Rochester", "Buffalo", "Syracus") ))

df$city_fct

df$city_fct_new

```


```{r}
ggplot(df) +
  geom_point(aes(x = income, y = city))
```




```{r}
ggplot(df) +
  geom_point(aes(x = income, y = city_fct))
```



```{r}
ggplot(df) +
  geom_point(aes(x = income, y = city_fct_new))
```


## fct_reorder

```{r}
df <- df |> 
  mutate(city_by_income = 
           fct_reorder(city_fct,
                       income),
         city_by_income_desc = 
           fct_reorder(city_fct,
                       -income)
         )

df$city_by_income

```


```{r}
ggplot(df,
       aes(x = income, y = city_by_income)) +
  geom_point()
```


```{r}
ggplot(df,
       aes(x = income, y = city_by_income)) +
  geom_bar(stat = "identity")
```


```{r}
ggplot(df,
       aes(x = income, y = city_by_income_desc)) +
  geom_bar(stat = "identity")
```


### multiple observations

```{r}


df2 <- data.frame(
  city = c("Rochester", "Buffalo", 
           "Geneseo", "Syracus", 
           "Rochester", "Buffalo", 
           "Geneseo", "Syracus",
           "Rochester", "Buffalo", 
           "Geneseo", "Syracus"),
  income = c(80,  82,  70, 75,
             60,  92,  70, 105,
             70,  52,  70, 35) 
  )

df2 <- df2 |> 
  mutate(city_fct = factor(city),
         city_by_income = 
           fct_reorder(city_fct,
                       income)
           )

df2$city_by_income
```
# Strings

```{r}
df_str <- data.frame(
  fruit = c("apple", "banana", "pear")
)

df_str <- df_str |> 
  mutate(fruit_e = str_detect(fruit, "e"))
```



```{r}
df_str <- df_str |> 
  mutate(
    fruit_replace = str_replace(fruit,
                                "a", "-"),
    
    fruit_replace_all = str_replace_all(fruit,
                                "a", "-")
  )
```



```{r}
df_str <- df_str |> 
  mutate(fruit_sub1 = str_sub(fruit, 1, 3),
         fruit_sub2 = str_sub(fruit, -3, -1),
         )
```


```{r}
df_str <- df_str |> 
  mutate(fruit_new = ifelse(
    fruit == "apple",
    "apple bee",
    fruit
  )
         )
```

## Classwork 10 - Q2f

```{r}
# install.packages("gapminder")
library(gapminder)
gapminder <- gapminder::gapminder
```


Provide the R code to create a dotplot that displays the values of country, sorted by lifeExp within each continent for the year 2007.


```{r}


gapminder_2007 <- gapminder |> 
  filter(year == 2007)

length( unique(gapminder_2007$country) )

gapminder_2007 <- gapminder_2007 |> 
  mutate(country_by_life = fct_reorder(country,
                                       lifeExp))

# gapminder_2007$country_by_life



```

```{r}

ggplot(gapminder_2007,
       aes(x = lifeExp,
           y = country_by_life)) +
  geom_point() +
  facet_wrap(continent ~ .,
             scales = "free_y")
```



